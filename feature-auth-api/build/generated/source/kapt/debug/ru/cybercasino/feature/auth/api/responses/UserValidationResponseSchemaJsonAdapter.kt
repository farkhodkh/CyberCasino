// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package ru.cybercasino.feature.auth.api.responses

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Boolean
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class UserValidationResponseSchemaJsonAdapter(
  moshi: Moshi
) : JsonAdapter<UserValidationResponseSchema>() {
  private val options: JsonReader.Options = JsonReader.Options.of("email", "phone", "password",
      "reset")

  private val nullableListOfStringAdapter: JsonAdapter<List<String>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, String::class.java), emptySet(),
      "email")

  private val nullableBooleanAdapter: JsonAdapter<Boolean?> =
      moshi.adapter(Boolean::class.javaObjectType, emptySet(), "reset")

  public override fun toString(): String = buildString(50) {
      append("GeneratedJsonAdapter(").append("UserValidationResponseSchema").append(')') }

  public override fun fromJson(reader: JsonReader): UserValidationResponseSchema {
    var email: List<String>? = null
    var phone: List<String>? = null
    var password: List<String>? = null
    var reset: Boolean? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> email = nullableListOfStringAdapter.fromJson(reader)
        1 -> phone = nullableListOfStringAdapter.fromJson(reader)
        2 -> password = nullableListOfStringAdapter.fromJson(reader)
        3 -> reset = nullableBooleanAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return UserValidationResponseSchema(
        email = email,
        phone = phone,
        password = password,
        reset = reset
    )
  }

  public override fun toJson(writer: JsonWriter, value_: UserValidationResponseSchema?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("email")
    nullableListOfStringAdapter.toJson(writer, value_.email)
    writer.name("phone")
    nullableListOfStringAdapter.toJson(writer, value_.phone)
    writer.name("password")
    nullableListOfStringAdapter.toJson(writer, value_.password)
    writer.name("reset")
    nullableBooleanAdapter.toJson(writer, value_.reset)
    writer.endObject()
  }
}
